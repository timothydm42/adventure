{"version":3,"sources":["app.js","controller.js","encounterDir.js","service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","template","controller","$scope","$state","service","torchEncounter","getEncounter","then","result","console","log","data","directive","templateUrl","scope","$http","$q","this","method"],"mappings":"YAIAA,SAAQC,OAAO,OAAQ,cAAcC,QAAQ,iBAAiB,qBAAqB,SAASC,EAAgBC,GAE1GD,EAAeE,MAAM,QACnBC,IAAK,QACLC,SAAU,MACTF,MAAM,aACPC,IAAK,aACLC,SAAS,4BACRF,MAAM,UACPC,IAAK,YAEJD,MAAM,WACPC,IAAK,aAEJD,MAAM,WACPC,IAAK,aAEJD,MAAM,cACPC,IAAK,mBCtBTN,QAAQC,OAAO,OAAOO,WAAW,QAAS,SAAS,SAAS,UAAU,SAASC,EAAQC,EAAQC,GAE7FF,EAAOG,eAAiBD,EAAQE,eAAeC,KAAK,SAASC,GAE3D,MADAC,SAAQC,IAAIF,GACLA,EAAOG,UCJlBlB,QAAQC,OAAO,OAAOkB,UAAU,aAAc,WAE5C,OACEC,YAAa,oBACbC,SAGAb,YAAY,SAAU,UAAW,SAASC,EAAQE,GAChDF,EAAOG,eAAiBD,EAAQE,eAAeC,KAAK,SAASC,GAAU,MAAOA,GAAOG,aCR3FlB,QAAQC,OAAO,OAAOU,QAAQ,WAAY,QAAS,KAAM,SAASW,EAAOC,GAErEC,KAAKX,aAAe,WAElB,MADAG,SAAQC,IAAI,4BACLK,GACLhB,IAAI,+CACJmB,OAAO","file":"bundle.js","sourcesContent":["// --save in the terminal working inside npm will install the snippet not globally\n// when you have a package.json, list dependencies inthere and npm install will install and list them auto in the package.json file, and\n//set up the folder with the installs auto\n// npm install will only install stuff from the package.json file listed as values under dependencies property vprsigsfi[fgh[dfoihdfgh[difghidf[gih]]]]\nangular.module(\"app\", [\"ui.router\"]).config([\"$stateProvider\",\"$urlRouterProvider\",function($stateProvider, $urlRouterProvider) {\n\n  $stateProvider.state(\"home\", {\n    url: \"/home\",\n    template: \"/\"\n  }).state(\"encounter\",{\n    url: \"/encounter\",\n    template:\"<encounter></encounter>\"\n  }).state(\"nature\", {\n    url: \"/nature\",\n    // template:,\n  }).state(\"habitat\", {\n    url: \"/habitat\",\n    // template:,\n  }).state(\"berries\", {\n    url: \"/berries\",\n    // template:,\n  }).state(\"flavorText\", {\n    url: \"/flavorText\",\n    // template:,\n  });\n\n}]);\n","angular.module(\"app\").controller(\"ctrl\", ['$scope',\"$state\",'service',function($scope, $state, service){\n\n  $scope.torchEncounter = service.getEncounter().then(function(result) {\n    console.log(result);\n    return result.data\n  });\n\n}]);\n","angular.module(\"app\").directive(\"encounter\", [function() {\n\n  return {\n    templateUrl: \"encounterDir.html\",\n    scope: {\n\n    },\n    controller:[\"$scope\", \"service\", function($scope, service){\n      $scope.torchEncounter = service.getEncounter().then(function(result) { return result.data});\n    }]\n  };\n\n}]);\n","angular.module(\"app\").service(\"service\", [\"$http\", \"$q\", function($http, $q){\n\n    this.getEncounter = function() {\n      console.log(\"GET ENCOUNTER RUNNING...\");\n      return $http({\n        url:\"http://pokeapi.co/api/v2/encounter-method/1/\",\n        method:\"GET\"\n      });\n    }\n\n}]);\n"]}